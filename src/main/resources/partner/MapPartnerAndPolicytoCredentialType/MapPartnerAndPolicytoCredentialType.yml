MapPartnerAndPolicytoCredentialType:
   Partner_MapPartnerAndPolicytoCredentialType_AllValid_smoke:
      endPoint: /v1/partnermanager/partners/{partnerId}/credentialtype/{credentialType}/policies/{policyId}
      role: partner
      restMethod: post
      inputTemplate: partner/MapPartnerAndPolicytoCredentialType/mapPartnerAndPolicytoCredentialType
      outputTemplate: partner/MapPartnerAndPolicytoCredentialType/mapPartnerAndPolicytoCredentialTypeResult
      input: '{
    "partnerId": "MOVP",
    "credentialType": "auth",
    "policyId": "mosip policy"
}'
      output: '{
   "response": "Partner, policy and credentialType mapping done successfully."    
}'
   Partner_MapPartnerAndPolicytoCredentialType_InValid_partnerId:
      endPoint: /v1/partnermanager/partners/{partnerId}/credentialtype/{credentialType}/policies/{policyId}
      role: partner
      restMethod: post
      inputTemplate: partner/MapPartnerAndPolicytoCredentialType/mapPartnerAndPolicytoCredentialType
      outputTemplate: partner/error
      input: '{
    "partnerId": "asvgasfbkasdm",
    "credentialType": "auth",
    "policyId": "mpolicy-default-auth"
}'
      output: '{
   "errors": [
    {
      "errorCode": "PMS_PRT_005",
      "message": "Partner does not exist"
    }
  ]      
}'
   Partner_MapPartnerAndPolicytoCredentialType_InValid_policyId:
      endPoint: /v1/partnermanager/partners/{partnerId}/credentialtype/{credentialType}/policies/{policyId}
      role: partner
      restMethod: post
      inputTemplate: partner/MapPartnerAndPolicytoCredentialType/mapPartnerAndPolicytoCredentialType
      outputTemplate: partner/error
      input: '{
    "partnerId": "mpartner-default-auth",
    "credentialType": "auth",
    "policyId": "asrhtaeh"
}'
      output: '{
   "errors": [
    {
      "errorCode": "PMS_PRT_098",
      "message": "$IGNORE$"
    }
  ]      
}'
   Partner_MapPartnerAndPolicytoCredentialType_InValid_credentialType:
      endPoint: /v1/partnermanager/partners/{partnerId}/credentialtype/{credentialType}/policies/{policyId}
      role: partner
      restMethod: post
      inputTemplate: partner/MapPartnerAndPolicytoCredentialType/mapPartnerAndPolicytoCredentialType
      outputTemplate: partner/error
      input: '{
    "partnerId": "mpartner-default-auth",
    "credentialType": "sfdgsaefhb",
    "policyId": "mpolicy-default-auth"
}'
      output: '{
   "errors": [
    {
      "errorCode": "PMS_PRT_072",
      "message": "Given credential type is not allowed. Allowed credential types : auth,qrcode,euin,reprint"
    }
  ]      
}'